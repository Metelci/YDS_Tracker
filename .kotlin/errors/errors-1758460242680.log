kotlin version: 2.0.21
error message: org.jetbrains.kotlin.codegen.CompilationException: Back-end (JVM) Internal error: Couldn't transform method node:
updateEvent (JLcom/mtlc/studyplan/calendar/CalendarEventData;)Z:
    // annotable parameter count: 2 (visible)
    // annotable parameter count: 2 (invisible)
    @Lorg/jetbrains/annotations/NotNull;() // invisible, parameter 1
    TRYCATCHBLOCK L0 L1 L2 java/lang/Exception
   L3
    ALOAD 3
    LDC "event"
    INVOKESTATIC kotlin/jvm/internal/Intrinsics.checkNotNullParameter (Ljava/lang/Object;Ljava/lang/String;)V
   L4
    LINENUMBER 136 L4
    ALOAD 0
    INVOKEVIRTUAL com/mtlc/studyplan/calendar/CalendarContractProvider.hasCalendarPermissions ()Z
    IFNE L5
    ICONST_0
    IRETURN
   L5
    LINENUMBER 138 L5
    NEW android/content/ContentValues
    DUP
    INVOKESPECIAL android/content/ContentValues.<init> ()V
    ASTORE 5
    ALOAD 5
    ASTORE 6
   L6
    ICONST_0
    ISTORE 7
   L7
    LINENUMBER 139 L7
    ALOAD 6
    LDC "title"
    ALOAD 3
    INVOKEVIRTUAL com/mtlc/studyplan/calendar/CalendarEventData.getTitle ()Ljava/lang/String;
    INVOKEVIRTUAL android/content/ContentValues.put (Ljava/lang/String;Ljava/lang/String;)V
   L8
    LINENUMBER 140 L8
    ALOAD 6
    LDC "description"
    ALOAD 3
    INVOKEVIRTUAL com/mtlc/studyplan/calendar/CalendarEventData.getDescription ()Ljava/lang/String;
    INVOKEVIRTUAL android/content/ContentValues.put (Ljava/lang/String;Ljava/lang/String;)V
   L9
    LINENUMBER 141 L9
    ALOAD 6
    LDC "dtstart"
    ALOAD 3
    INVOKEVIRTUAL com/mtlc/studyplan/calendar/CalendarEventData.getStartTimeMillis ()J
    INVOKESTATIC java/lang/Long.valueOf (J)Ljava/lang/Long;
    INVOKEVIRTUAL android/content/ContentValues.put (Ljava/lang/String;Ljava/lang/Long;)V
   L10
    LINENUMBER 142 L10
    ALOAD 6
    LDC "dtend"
    ALOAD 3
    INVOKEVIRTUAL com/mtlc/studyplan/calendar/CalendarEventData.getEndTimeMillis ()J
    INVOKESTATIC java/lang/Long.valueOf (J)Ljava/lang/Long;
    INVOKEVIRTUAL android/content/ContentValues.put (Ljava/lang/String;Ljava/lang/Long;)V
   L11
    LINENUMBER 143 L11
    ALOAD 6
    LDC "eventTimezone"
    ALOAD 3
    INVOKEVIRTUAL com/mtlc/studyplan/calendar/CalendarEventData.getTimeZone ()Ljava/lang/String;
    INVOKEVIRTUAL android/content/ContentValues.put (Ljava/lang/String;Ljava/lang/String;)V
   L12
    LINENUMBER 144 L12
    ALOAD 6
    LDC "allDay"
    ALOAD 3
    INVOKEVIRTUAL com/mtlc/studyplan/calendar/CalendarEventData.getAllDay ()Z
    IFEQ L13
    ICONST_1
    GOTO L14
   L13
    ICONST_0
   L14
    INVOKESTATIC java/lang/Integer.valueOf (I)Ljava/lang/Integer;
    INVOKEVIRTUAL android/content/ContentValues.put (Ljava/lang/String;Ljava/lang/Integer;)V
   L15
    LINENUMBER 145 L15
    ALOAD 6
    LDC "hasAlarm"
    ALOAD 3
    INVOKEVIRTUAL com/mtlc/studyplan/calendar/CalendarEventData.getReminderMinutes ()I
    NOP
    NOP
    IFLE L16
    ICONST_1
    GOTO L17
   L16
    ICONST_0
   L17
    INVOKESTATIC java/lang/Integer.valueOf (I)Ljava/lang/Integer;
    INVOKEVIRTUAL android/content/ContentValues.put (Ljava/lang/String;Ljava/lang/Integer;)V
   L18
    LINENUMBER 146 L18
    GOTO L19
   L19
    NOP
   L20
    LINENUMBER 138 L20
    NOP
    ALOAD 5
    GOTO L21
   L21
    LINENUMBER 138 L21
    ASTORE 4
   L22
    LINENUMBER 148 L22
   L0
    NOP
   L23
    LINENUMBER 149 L23
    GETSTATIC android/provider/CalendarContract$Events.CONTENT_URI : Landroid/net/Uri;
    LLOAD 1
    INVOKESTATIC android/content/ContentUris.withAppendedId (Landroid/net/Uri;J)Landroid/net/Uri;
    DUP
    LDC "withAppendedId(...)"
    INVOKESTATIC kotlin/jvm/internal/Intrinsics.checkNotNullExpressionValue (Ljava/lang/Object;Ljava/lang/String;)V
    ASTORE 5
   L24
    LINENUMBER 150 L24
    ALOAD 0
    GETFIELD com/mtlc/studyplan/calendar/CalendarContractProvider.context : Landroid/content/Context;
    INVOKEVIRTUAL android/content/Context.getContentResolver ()Landroid/content/ContentResolver;
    ALOAD 5
    ALOAD 4
    ACONST_NULL
    ACONST_NULL
    INVOKEVIRTUAL android/content/ContentResolver.update (Landroid/net/Uri;Landroid/content/ContentValues;Ljava/lang/String;[Ljava/lang/String;)I
    ISTORE 6
   L25
    LINENUMBER 153 L25
    ILOAD 6
    NOP
    NOP
    IFLE L26
   L27
    LINENUMBER 154 L27
    ALOAD 0
    LLOAD 1
    INVOKESPECIAL com/mtlc/studyplan/calendar/CalendarContractProvider.removeEventReminders (J)V
   L28
    LINENUMBER 155 L28
    ALOAD 3
    INVOKEVIRTUAL com/mtlc/studyplan/calendar/CalendarEventData.getReminderMinutes ()I
    NOP
    NOP
    IFLE L26
   L29
    LINENUMBER 156 L29
    ALOAD 0
    LLOAD 1
    ALOAD 3
    INVOKEVIRTUAL com/mtlc/studyplan/calendar/CalendarEventData.getReminderMinutes ()I
    INVOKESPECIAL com/mtlc/studyplan/calendar/CalendarContractProvider.addEventReminder (JI)V
   L26
    LINENUMBER 160 L26
    ILOAD 6
    NOP
    NOP
    IFLE L30
    ICONST_1
    GOTO L31
   L30
    ICONST_0
   L31
    ISTORE 5
   L1
    GOTO L32
   L2
    LINENUMBER 161 L2
    ASTORE 6
   L33
    LINENUMBER 162 L33
    ICONST_0
    ISTORE 5
   L32
    ILOAD 5
   L34
    LINENUMBER 148 L34
    IRETURN
   L35
    LOCALVARIABLE $i$a$-apply-CalendarContractProvider$updateEvent$values$1 I L7 L19 7
    LOCALVARIABLE $this$updateEvent_u24lambda_u244 Landroid/content/ContentValues; L6 L19 6
    LOCALVARIABLE uri Landroid/net/Uri; L24 L31 5
    LOCALVARIABLE rowsUpdated I L25 L31 6
    LOCALVARIABLE e Ljava/lang/Exception; L33 L32 6
    LOCALVARIABLE values Landroid/content/ContentValues; L22 L35 4
    LOCALVARIABLE this Lcom/mtlc/studyplan/calendar/CalendarContractProvider; L3 L35 0
    LOCALVARIABLE eventId J L3 L35 1
    LOCALVARIABLE event Lcom/mtlc/studyplan/calendar/CalendarEventData; L3 L35 3
    MAXSTACK = 6
    MAXLOCALS = 8

File is unknown
The root cause java.lang.OutOfMemoryError was thrown at: org.jetbrains.org.objectweb.asm.Type.getTypeInternal(Type.java:439)
	at org.jetbrains.kotlin.codegen.TransformationMethodVisitor.visitEnd(TransformationMethodVisitor.kt:89)
	at org.jetbrains.org.objectweb.asm.MethodVisitor.visitEnd(MethodVisitor.java:783)
	at org.jetbrains.org.objectweb.asm.tree.MethodNode.accept(MethodNode.java:772)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generateMethod(ClassCodegen.kt:453)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generate(ClassCodegen.kt:168)
	at org.jetbrains.kotlin.backend.jvm.FileCodegen.lower(JvmPhases.kt:39)
	at org.jetbrains.kotlin.backend.common.phaser.PhaseFactoriesKt.createFilePhase$lambda$4(PhaseFactories.kt:71)
	at org.jetbrains.kotlin.backend.common.phaser.PhaseBuildersKt$createSimpleNamedCompilerPhase$1.phaseBody(PhaseBuilders.kt:69)
	at org.jetbrains.kotlin.backend.common.phaser.SimpleNamedCompilerPhase.phaseBody(CompilerPhase.kt:226)
	at org.jetbrains.kotlin.backend.common.phaser.AbstractNamedCompilerPhase.invoke(CompilerPhase.kt:113)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invokeSequential(performByIrFile.kt:62)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invoke(performByIrFile.kt:52)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invoke(performByIrFile.kt:38)
	at org.jetbrains.kotlin.backend.common.phaser.NamedCompilerPhase.phaseBody(CompilerPhase.kt:166)
	at org.jetbrains.kotlin.backend.common.phaser.AbstractNamedCompilerPhase.invoke(CompilerPhase.kt:113)
	at org.jetbrains.kotlin.backend.common.phaser.CompositePhase.invoke(PhaseBuilders.kt:27)
	at org.jetbrains.kotlin.backend.common.phaser.CompositePhase.invoke(PhaseBuilders.kt:14)
	at org.jetbrains.kotlin.backend.common.phaser.NamedCompilerPhase.phaseBody(CompilerPhase.kt:166)
	at org.jetbrains.kotlin.backend.common.phaser.AbstractNamedCompilerPhase.invoke(CompilerPhase.kt:113)
	at org.jetbrains.kotlin.backend.common.phaser.CompilerPhaseKt.invokeToplevel(CompilerPhase.kt:62)
	at org.jetbrains.kotlin.backend.jvm.JvmIrCodegenFactory.invokeCodegen(JvmIrCodegenFactory.kt:371)
	at org.jetbrains.kotlin.codegen.CodegenFactory.generateModule(CodegenFactory.kt:47)
	at org.jetbrains.kotlin.backend.jvm.JvmIrCodegenFactory.generateModuleInFrontendIRMode(JvmIrCodegenFactory.kt:433)
	at org.jetbrains.kotlin.cli.jvm.compiler.pipeline.JvmCompilerPipelineKt.generateCodeFromIr(jvmCompilerPipeline.kt:246)
	at org.jetbrains.kotlin.cli.jvm.compiler.pipeline.JvmCompilerPipelineKt.compileModulesUsingFrontendIrAndLightTree(jvmCompilerPipeline.kt:142)
	at org.jetbrains.kotlin.cli.jvm.K2JVMCompiler.doExecute(K2JVMCompiler.kt:148)
	at org.jetbrains.kotlin.cli.jvm.K2JVMCompiler.doExecute(K2JVMCompiler.kt:43)
	at org.jetbrains.kotlin.cli.common.CLICompiler.execImpl(CLICompiler.kt:103)
	at org.jetbrains.kotlin.cli.common.CLICompiler.execImpl(CLICompiler.kt:49)
	at org.jetbrains.kotlin.cli.common.CLITool.exec(CLITool.kt:101)
	at org.jetbrains.kotlin.incremental.IncrementalJvmCompilerRunner.runCompiler(IncrementalJvmCompilerRunner.kt:464)
	at org.jetbrains.kotlin.incremental.IncrementalJvmCompilerRunner.runCompiler(IncrementalJvmCompilerRunner.kt:73)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.doCompile(IncrementalCompilerRunner.kt:506)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compileImpl(IncrementalCompilerRunner.kt:423)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compileNonIncrementally(IncrementalCompilerRunner.kt:301)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compile(IncrementalCompilerRunner.kt:129)
	at org.jetbrains.kotlin.daemon.CompileServiceImplBase.execIncrementalCompiler(CompileServiceImpl.kt:675)
	at org.jetbrains.kotlin.daemon.CompileServiceImplBase.access$execIncrementalCompiler(CompileServiceImpl.kt:92)
	at org.jetbrains.kotlin.daemon.CompileServiceImpl.compile(CompileServiceImpl.kt:1660)
	at jdk.internal.reflect.GeneratedMethodAccessor92.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.OutOfMemoryError: GC overhead limit exceeded
	at org.jetbrains.org.objectweb.asm.Type.getTypeInternal(Type.java:439)
	at org.jetbrains.org.objectweb.asm.Type.getType(Type.java:177)
	at org.jetbrains.kotlin.codegen.optimization.common.UtilKt.removeUnusedLocalVariables(Util.kt:188)
	at org.jetbrains.kotlin.codegen.optimization.DeadCodeEliminationMethodTransformer.transform(DeadCodeEliminationMethodTransformer.kt:48)
	at org.jetbrains.kotlin.codegen.optimization.transformer.CompositeMethodTransformer.transform(CompositeMethodTransformer.kt:25)
	at org.jetbrains.kotlin.codegen.optimization.OptimizationMethodVisitor.performTransformations(OptimizationMethodVisitor.kt:74)
	at org.jetbrains.kotlin.codegen.TransformationMethodVisitor.visitEnd(TransformationMethodVisitor.kt:67)
	at org.jetbrains.org.objectweb.asm.MethodVisitor.visitEnd(MethodVisitor.java:783)
	at org.jetbrains.org.objectweb.asm.tree.MethodNode.accept(MethodNode.java:772)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generateMethod(ClassCodegen.kt:453)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generate(ClassCodegen.kt:168)
	at org.jetbrains.kotlin.backend.jvm.FileCodegen.lower(JvmPhases.kt:39)
	at org.jetbrains.kotlin.backend.common.phaser.PhaseFactoriesKt.createFilePhase$lambda$4(PhaseFactories.kt:71)
	at org.jetbrains.kotlin.backend.common.phaser.PhaseFactoriesKt$$Lambda$168/0x0000000800d22bd0.invoke(Unknown Source)
	at org.jetbrains.kotlin.backend.common.phaser.PhaseBuildersKt$createSimpleNamedCompilerPhase$1.phaseBody(PhaseBuilders.kt:69)
	at org.jetbrains.kotlin.backend.common.phaser.SimpleNamedCompilerPhase.phaseBody(CompilerPhase.kt:226)
	at org.jetbrains.kotlin.backend.common.phaser.AbstractNamedCompilerPhase.invoke(CompilerPhase.kt:113)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invokeSequential(performByIrFile.kt:62)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invoke(performByIrFile.kt:52)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invoke(performByIrFile.kt:38)
	at org.jetbrains.kotlin.backend.common.phaser.NamedCompilerPhase.phaseBody(CompilerPhase.kt:166)
	at org.jetbrains.kotlin.backend.common.phaser.AbstractNamedCompilerPhase.invoke(CompilerPhase.kt:113)
	at org.jetbrains.kotlin.backend.common.phaser.CompositePhase.invoke(PhaseBuilders.kt:27)
	at org.jetbrains.kotlin.backend.common.phaser.CompositePhase.invoke(PhaseBuilders.kt:14)
	at org.jetbrains.kotlin.backend.common.phaser.NamedCompilerPhase.phaseBody(CompilerPhase.kt:166)
	at org.jetbrains.kotlin.backend.common.phaser.AbstractNamedCompilerPhase.invoke(CompilerPhase.kt:113)
	at org.jetbrains.kotlin.backend.common.phaser.CompilerPhaseKt.invokeToplevel(CompilerPhase.kt:62)
	at org.jetbrains.kotlin.backend.jvm.JvmIrCodegenFactory.invokeCodegen(JvmIrCodegenFactory.kt:371)
	at org.jetbrains.kotlin.codegen.CodegenFactory.generateModule(CodegenFactory.kt:47)
	at org.jetbrains.kotlin.backend.jvm.JvmIrCodegenFactory.generateModuleInFrontendIRMode(JvmIrCodegenFactory.kt:433)
	at org.jetbrains.kotlin.cli.jvm.compiler.pipeline.JvmCompilerPipelineKt.generateCodeFromIr(jvmCompilerPipeline.kt:246)
	at org.jetbrains.kotlin.cli.jvm.compiler.pipeline.JvmCompilerPipelineKt.compileModulesUsingFrontendIrAndLightTree(jvmCompilerPipeline.kt:142)


