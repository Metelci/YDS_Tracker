name: Android CI

on:
  push:
    branches: [ main, ui-m3-migration, develop ]
  pull_request:
    branches: [ main, ui-m3-migration ]

jobs:
  build:
    name: Build & Test
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Run Lint
        run: ./gradlew lintDebug

      - name: Upload Lint Results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: lint-results
          path: app/build/reports/lint-results-debug.html

      - name: Run Unit Tests
        run: ./gradlew testDebugUnitTest

      - name: Generate Coverage Report
        run: ./gradlew jacocoTestReport

      - name: Upload Test Results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: test-results
          path: app/build/test-results/testDebugUnitTest/

      - name: Upload Coverage Report
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: coverage-report
          path: app/build/reports/jacoco/jacocoTestReport/html/

      - name: Upload Coverage XML
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: coverage-xml
          path: app/build/reports/jacoco/jacocoTestReport/jacocoTestReport.xml

      - name: Build Debug APK
        run: ./gradlew assembleDebug

      - name: Upload Debug APK
        uses: actions/upload-artifact@v3
        with:
          name: app-debug
          path: app/build/outputs/apk/debug/app-debug.apk

      - name: Build Release APK
        run: ./gradlew assembleRelease

      - name: Upload Release APK
        uses: actions/upload-artifact@v3
        with:
          name: app-release
          path: app/build/outputs/apk/release/app-release.apk

  code-quality:
    name: Code Quality Checks
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Run Lint
        run: ./gradlew lintDebug

      - name: Run Detekt
        run: ./gradlew detekt
        continue-on-error: true

      - name: Upload Detekt Results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: detekt-results
          path: app/build/reports/detekt/

      # Future: Add ktlint when configured
      # - name: Check Kotlin code style
      #   run: ./gradlew ktlintCheck

      # Future: Add dependency check when configured
      # - name: Check for security vulnerabilities
      #   run: ./gradlew dependencyCheckAnalyze

  notify:
    name: Notify Build Status
    needs: [build, code-quality]
    runs-on: ubuntu-latest
    if: always()

    steps:
      - name: Check build status
        run: |
          if [[ "${{ needs.build.result }}" == "success" && "${{ needs.code-quality.result }}" == "success" ]]; then
            echo "✅ All checks passed!"
          else
            echo "❌ Some checks failed"
            exit 1
          fi
